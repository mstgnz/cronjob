{{template "base" . }}

{{define "css"}}
<style>
.hstack {
    visibility:hidden;
}
tr:hover .hstack{
    visibility:visible;
}
</style>
{{end}}

{{define "userList" }}
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Fullname</th>
                <th scope="col">Email</th>
                <th scope="col">Phone</th>
                <th scope="col">Active</th>
                <th scope="col">IsAdmin</th>
                <th scope="col">Last Login</th>
                <th scope="col">Created</th>
                <th scope="col">Updated</th>
                <th scope="col">Deleted</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody hx-target="closest tr" hx-swap="outerHTML swap:1s">
        </tbody>
    </table>
</div>
<div class="mt-4">
    <nav>
        <ul class="pagination"></ul>
    </nav>
</div>
<!-- USER UPDATE MODAL -->
<div id="profile-update" class="modal modal-blur fade" style="display: none">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">User Update</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form hx-put="/setting/users/change-profile" hx-target="#profile-toast" hx-ext="json-enc" novalidate autocomplete="off">
            <div class="modal-body">
                <div class="form-floating mb-2">
                    <input type="text" class="form-control" name="fullname" placeholder="Firstname Lastname" required>
                    <label for="fullname">Fullname</label>
                </div>
                <div class="form-floating mb-2">
                    <input type="email" class="form-control" name="email" placeholder="name@example.com" required>
                    <label for="email">Email</label>
                </div>
                <div class="form-floating mb-2">
                    <input type="text" class="form-control" name="phone" placeholder="+909876543210" required>
                    <label for="phone">Phone</label>
                </div>
                <span id="profile-toast"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Change</button>
            </div>
            </form>
        </div>
    </div>
</div>
<!-- USER PASSWORD UPDATE MODAL -->
<div id="pass-update" class="modal modal-blur fade" style="display: none">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">User Password Update</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form hx-put="/setting/users/change-password" hx-target="#pass-toast" hx-ext="json-enc" novalidate autocomplete="off">
            <div class="modal-body">
                <div class="form-floating mb-2">
                    <input type="password" class="form-control" name="password" placeholder="Password" required>
                    <label>Password</label>
                </div>
                 <div class="form-floating mb-2">
                    <input type="password" class="form-control" name="re-password" placeholder="Re-Password" required>
                    <label>Re-Password</label>
                </div>
                <span id="pass-toast"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Change</button>
            </div>
            </form>
        </div>
    </div>
</div>
{{end}}

{{define "js"}}
<script>
document.addEventListener("htmx:load", function() {
    function loadUsers(url) {
        fetch(url)
        .then(response => response.json())
        .then(data => {
            const tbody = document.querySelector("#users tbody");
            tbody.innerHTML = data.users.map(user => `
                <tr>
                    <th scope="row">${user.id}</th>
                    <td>${user.fullname}</td>
                    <td>${user.email}</td>
                    <td>${user.phone}</td>
                    <td>${user.is_admin}</td>
                    <td>${user.active}</td>
                    <td>${user.last_login ? new Date(user.last_login).toLocaleDateString() : ''}</td>
                    <td>${user.created_at ? new Date(user.created_at).toLocaleDateString() : ''}</td>
                    <td>${user.updated_at ? new Date(user.updated_at).toLocaleDateString() : ''}</td>
                    <td>${user.deleted_at ? new Date(user.deleted_at).toLocaleDateString() : ''}</td>
                    <td>
                        <div class="hstack gap-1">
                            <button class="btn btn-info" data-user="${user}">
                                <i class="bi bi-pencil"></i>
                            </button>
                            <button class="btn btn-warning" data-user="${user}">
                            <i class="bi bi-key-fill"></i>
                            </button>
                            <button class="btn btn-danger" data-id="${user.id}">
                                <i class="bi bi-trash-fill"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join("");
            document.getElementsByClassName("pagination")[0].innerHTML = `<li class="page-item">
            <a class="page-link" href="#" page-url="/setting/users?page=${data.previous}">Previous</a>
            </li>`
            for(i=1;i<=data.size;i++){
                document.getElementsByClassName("pagination")[0].innerHTML += `<li class="page-item" ${data.current === i ? 'active' : ''}">
                <a class="page-link" href="#" page-url="/setting/users?page=${i}">${i}</a>
                </li>`
            }
            document.getElementsByClassName("pagination")[0].innerHTML += `<li class="page-item">
            <a class="page-link" href="#" page-url="/setting/users?page=${data.next}">Next</a>
            </li>`
        })
    }

    loadUsers("/setting/users");
    
    document.querySelector(".pagination").addEventListener("click", function(e) {
        if (e.target.tagName === 'A') {
            loadUsers(e.target.getAttribute("page-url"))
        }
    })

    document.querySelector("#users tbody").addEventListener("click", function(e) {
        if (e.target.closest('.btn-info')) {
            const button = e.target.closest('.btn-info');
            const user = button.getAttribute('data-user');
            document.getElementsByName('password')
            new bootstrap.Modal('#profile-update').show()
        }
        if (e.target.closest('.btn-warning')) {
            const button = e.target.closest('.btn-warning');
            const user = button.getAttribute('data-user');
            new bootstrap.Modal('#pass-update').show()
        }
        if (e.target.closest('.btn-danger')) {
            const button = e.target.closest('.btn-danger');
            const userId = button.getAttribute('data-id');
            Swal.fire({
                title: 'Do you approve the deletion?',
                icon: 'warning',
                showCancelButton: true,
                cancelButtonColor: '#d33',
                cancelButtonText: 'Close',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Yes Delete'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/setting/users/${userId}/delete`, {
                        method: 'DELETE'
                    }).then(response => {
                        if (response.ok) {
                            loadUsers("/setting/users");
                        } else {
                            console.error('Delete request failed');
                        }
                    }).catch(error => {
                        console.error('Error:', error);
                    })
                }
            })
        }
    })
})
</script>
{{end}}